$ms-up5: $ms-up4 * $ms-ratio;
$ms-up6: $ms-up5 * $ms-ratio;
$ms-up7: $ms-up6 * $ms-ratio;

//==============================================================================
// Default Type Styles
//==============================================================================

// Stops devices from scaling up text.
html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

::selection {
  background-color: $highlight-color;
}

body {
  margin: 0;
  padding: 0;
  font-family: $font-serif;
  font-weight: 400;
  color: $text-color;
  flex-direction: column;
  display: flex;
  min-height: 100vh;
  background-color: $site-bg-color;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
  margin-top: 0;
  padding-top: 0;
  padding-bottom: 0;
  font-weight: 700;
  font-style: normal;
  font-family: $font-narrow-sans;
  text-rendering: optimizeLegibility;

  a:link,
  a:visited {
    color: $text-color;
  }

  a:hover,
  a:active {
    color: $link-color;
    text-decoration: none;
  }
}

// [1] Applies a margin bottom that is a multiple of the vertical grid in EMs.
// The first argument is the font size context and the second is multiple of the
// vertical grid unit.
// [2] Sets the type to one of the modular scale values and the second argument
// sets a unitless line-height as a multiple of the vertical grid.
// [3] A generic media query for tablet size ranges.
// [4] Applies a margin bottom that is the same vertical grid value as the mobile
// first rule.
// [5] Sets the type to one of the modular scale values and the second argument
// sets a unitless line-height as a multiple of the vertical grid.
h1, .h1 {
  margin-bottom: emRhythm(2, $ms-up3); // [1]
  @include setType(5, $ms-up3); // [2]

  @media (min-width: $screen-sm-min) {
    // [3]
    margin-bottom: emRhythm(2, $ms-up4); // [4]
    @include setType(7, $ms-up4); // [5]
  }

  @media (min-width: $screen-md-min) {
    margin-bottom: emRhythm(3, $ms-up5);
    @include setType(9, $ms-up5);
  }
}

h2, .h2 {
  margin-bottom: emRhythm(1, $ms-up1);
  @include setType(5, $ms-up1);

  @media (min-width: $screen-sm-min) {
    margin-bottom: emRhythm(1, $ms-up2);
    @include setType(5, $ms-up2)
  }

  @media (min-width: $screen-md-min) {
    margin-bottom: emRhythm(1, $ms-up3);
    @include setType(6, $ms-up3);
  }
}

h3, .h3 {
  margin-bottom: emRhythm(1, $ms-up1);
  @include setType(4, $ms-up1);

  @media (min-width: $screen-md-min) {
    margin-bottom: emRhythm(1, $ms-up2);
    @include setType(5, $ms-up2);
  }
}

h4, .h4 {
  margin-bottom: emRhythm(1, $ms-up1);
  @include setType(4, $ms-up1);
}

h5, .h5,
h6, .h6 {
  margin-bottom: emRhythm(1);
  @include setType(3.5);
}

p {
  margin-top: 0;
  margin-bottom: emRhythm($base-line-multi);
  padding-top: 0;
  padding-bottom: 0;

  @media (min-width: 43.75em) {
    @if $paragraph-justify {
      text-align: justify;
    }
  }
}

@if $paragraph-indent {
  p + p,
  blockquote + p {
    margin-top: emRhythm($base-line-multi * -1);
    text-indent: emRhythm($base-line-multi);
  }
}

small,
.font-small {
  @include setType(3, $ms-down1);
}

em {
  font-style: italic;
}

strong {
  font-weight: bold;
}

blockquote {
  margin-top: emRhythm($base-line-multi);
  margin-bottom: emRhythm($base-line-multi);
  margin-right: 0;
  margin-left: 0;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: emRhythm($base-line-multi);
  font-weight: 700;
  font-family: $font-display-serif;
  position: relative;
  border-left: 1px solid $border-color;
  clear: both;
  text-rendering: optimizeLegibility;

  p {
    margin-bottom: emRhythm(2);
    @media (min-width: $screen-sm-min) {
      @include setType(6, $ms-up3);
    }
  }

  footer {
    font-weight: 400;
    font-family: $font-sans;
    @include setType(4, $ms-down1);
    cite {
      font-style: normal;
      &:before {
        content: "";
        background: $blockquote-accent-color;
        height: 1px;
        width: 1.5em;
        vertical-align: middle;
        display: inline-block;
        margin-right: 0.5em;
        margin-left: 0.5em;
      }
    }
  }
}

.pullquote {
  width: 50%;
  display: block;

  p {
    margin-bottom: 0;
  }
}

.pullquote.left {
  float: left;
  margin-right: emRhythm($base-line-multi);
  text-align: right;
  border-left: none;
  border-right: 1px solid lighten($text-color, 60%);
  padding-right: emRhythm($base-line-multi);
  padding-left: 0;
}

.pullquote.right {
  float: right;
  margin-left: emRhythm($base-line-multi);
}


pre,
code {
  font-family: $font-mono;
}

ol,
ul,
dl {
  margin-left: 0;
  margin-top: 0;
  margin-bottom: emRhythm($base-line-multi);
  padding-left: emRhythm(5);
  padding-top: 0;
  padding-bottom: 0;

  & li {
    margin-bottom: emRhythm(2);
  }
}

ul ul,
ol ol,
dl dl {
  margin-left: 0;
}

ul {
  list-style: disc;
}

ol {
  list-style: decimal;
}

// [1] https://developer.mozilla.org/en-US/docs/CSS/font-variant
abbr {
  font-variant: small-caps; // [1]
  font-weight: 600;
  text-transform: lowercase;
}

// Cursor changed to a question mark when it has a title
abbr[title]:hover {
  cursor: help;
}

// Creates horizontal rules that obey the baseline.
// [1] Zero outs the user agent border
hr {
  margin-top: emRhythm(4);
  margin-bottom: 0;
  border: none; // [1]
  border-top-color: $text-color;
  border-top-style: solid;
  @include rhythmBorderTop(1px, 4);
}

a {
  transition: color $trans-dur $trans-ease;
}

a:link,
a:visited {
  color: $link-color;
  text-decoration: none;
}

a:hover,
a:active {
  text-decoration: underline;
}

a:active {
  color: $link-color-active;
}

table {
  border-collapse: collapse;
  width: 100%;
  margin-bottom: emRhythm($base-line-multi);
  @include setType(4, $ms-down1)
}
th, td {
  padding: 0.25rem;
  text-align: left;
  border: 1px solid $blockquote-accent-color;
}
tbody tr:nth-child(odd) {
  background: #eee;
}

mark {
  background-color: $yellow;
}

figure {
  margin-left: 0;
  margin-bottom: emRhythm($base-line-multi);
}
